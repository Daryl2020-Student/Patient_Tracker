name: .NET

#On a push || pull to the master branch, initiate this workflow
on:
  push:
    branches:
      - master
    paths-ignore: #Ignore markdown files & git files
      - '**/*.md'
      - '**/*.git*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

#Defining the environment variables to be used in the workflow
env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:

  setup: #Setup job to install .Net workload on the latest Windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: [7.0.x] #The .Net version

    steps:
      - uses: actions/checkout@v3 #Checkout the repo using GitHub action checkout "Checkout version 3"
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x #The .Net version

      - name: Cache .NET packages #Caching the .Net NuGet packages
        uses: actions/cache@v2 #Using the GitHub action "Cache version 2"
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-packages-${{ hashFiles('**/*.csproj') }} #Defining a key for caching
          #Restore-keys looks for variations of the key created so it doesn't have to be exact
          restore-keys: |
            ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-packages- 
            ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-
            ${{ runner.os }}-dotnet-

  #Building the web app
  build-web-app: 
    needs: setup
    name: Build Web App
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v3 #Using "Checkout version 3"

      - name: Cache .NET packages
        uses: actions/cache@v2 #Using the GitHub action Cache version 2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-packages-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-packages-
            ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-
            ${{ runner.os }}-dotnet-
     
      - name: Setup .NET #Setup .Net
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Restore #Restore the .Net packages
        run: dotnet restore
      - name: Build #Build .Net
        run: dotnet build --no-restore

  #Testing the SQLite DB
  test:
    needs: build-web-app #Needs this to run
    name: Test SQLite Database and Code #Name of job
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Cache .NET packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-packages-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-packages-
            ${{ runner.os }}-dotnet-${{ matrix.dotnet-version }}-
            ${{ runner.os }}-dotnet-
            
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Restore
        run: dotnet restore
      - name: Test
        run: dotnet test
  #Deloying the Web-App using Windows lastest release
  deploy:
    needs: [build-web-app, test]
    if: ${{ needs.test.result == 'success' }}
    name: Deploy App
    runs-on: windows-latest

    steps:
      - name: Deploy Web App
        run: echo "Deploy in progress" #Message to screen
